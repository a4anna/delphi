syntax = "proto3";

import "google/protobuf/empty.proto";
import "proto/search.proto";

service LearningModuleService {
  rpc GetResults (SearchId) returns (stream InferResult);
  rpc Infer (stream InferRequest) returns (stream InferResult);
  rpc AddLabeledExamples (stream LabeledExampleRequest) returns (google.protobuf.Empty);
  rpc GetModelStatistics (SearchId) returns (ModelStatistics);
  rpc ImportModel (ImportModelRequest) returns (google.protobuf.Empty);
  rpc ExportModel (SearchId) returns (ModelArchive);
}

message InferRequest {
  oneof value {
    SearchId searchId = 1;
    InferObject object = 2;
  }
}

message InferObject {
  string objectId = 1;
  bytes content = 2;
  map<string, bytes> attributes = 3;
}

message InferResult {
  string objectId = 1;
  string label = 2;
  double score = 3;
  int32 modelVersion = 4;
  map<string, bytes> attributes = 5;
}

message LabeledExampleRequest {
  oneof value {
    SearchId searchId = 1;
    LabeledExample example = 2;
  }
}

message ModelStatistics {
  int64 testExamples = 1;
  double auc = 2;
  ModelMetrics validationMetrics = 3;
  ModelMetrics idealMetrics = 4;
  double bestThreshold = 5;
  repeated double precisions = 6;
  repeated double recalls = 7;
  repeated double thresholds = 8;
  int32 version = 9;
}

message ModelMetrics {
  int64 truePositives = 1;
  int64 falsePositives = 2;
  int64 falseNegatives = 3;
  double precision = 4;
  double recall = 5;
  double f1Score = 6;
}

message ImportModelRequest {
  SearchId searchId = 1;
  int32 version = 2;
  bytes content = 3;
}

message ModelArchive {
  int32 version = 1;
  bytes content = 2;
}
