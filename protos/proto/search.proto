syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

service SearchService {
  rpc Start (stream SearchRequest) returns (SearchId);
  rpc Stop (SearchId) returns (google.protobuf.Empty);
}

message SearchRequest {
  oneof value {
    SearchConfig config = 1;
    LabeledExample example = 2;
  }
}

message SearchConfig {
  repeated string nodes = 1;
  int32 nodeIndex = 2;
  repeated ModelConditionConfig trainStrategy = 3;
  RetrainPolicyConfig retrainPolicy = 4;
  google.protobuf.BoolValue onlyUseBetterModels = 5;
  Dataset dataset = 6;
  SelectorConfig selector = 7;
}

message ModelConditionConfig {
  oneof value {
    ExamplesPerLabelConditionConfig examplesPerLabel = 1;
    TestAucConditionConfig testAuc = 2;
  }
}

message ExamplesPerLabelConditionConfig {
  int32 count = 1;
  ModelConfig model = 2;
}

message TestAucConditionConfig {
  double threshold = 1;
  ModelConfig model = 2;
}

message ModelConfig {
  oneof value {
    SVMConfig svm = 1;
    FastMPNCOVConfig fastMPNCOV = 2;
    WSDANConfig wsdan = 3;
  }
}

message SVMConfig {
  SVMMode mode = 1;
  google.protobuf.BoolValue featureExtractor = 2;
  google.protobuf.BoolValue probability = 3;
  google.protobuf.BoolValue linearOnly = 4;
}

enum SVMMode {
    MASTER_ONLY = 0;
    DISTRIBUTED = 1;
    ENSEMBLE = 2;
}

message FastMPNCOVConfig {
  google.protobuf.BoolValue distributed = 1;
  google.protobuf.Int32Value freeze = 2;
}

message WSDANConfig {
  google.protobuf.BoolValue distributed = 1;
  google.protobuf.Int32Value freeze = 2;
  google.protobuf.BoolValue visualize = 3;
}

message RetrainPolicyConfig {
  oneof value {
    AbsoluteThresholdPolicyConfig absolute = 1;
    PercentageThresholdPolicyConfig percentage = 2;
  }
}

message AbsoluteThresholdPolicyConfig {
  int32 threshold = 1;
  bool onlyPositives = 2;
}

message PercentageThresholdPolicyConfig {
  double threshold = 1;
  bool onlyPositives = 2;
}

message Dataset {
  oneof value {
    DiamondDataset diamond = 1;
  }
}

message DiamondDataset {
  repeated Filter filters = 1;
  repeated string cookies = 2;
  repeated string attributes = 3;
}

message Filter {
  bytes code = 1;
  repeated string dependences = 2;
  repeated string arguments = 3;
  string name = 4;
  double minScore = 5;
  double maxScore = 6;
  bytes blob = 7;
}

message SelectorConfig {
  oneof value {
    TopKSelectorConfig topk = 1;
  }
}

message TopKSelectorConfig {
  int32 k = 1;
  int32 batchSize = 2;
  ReexaminationStrategyConfig reexaminationStrategy = 3;
}

message ReexaminationStrategyConfig {
  oneof value {
    NoReexaminationStrategyConfig none = 1;
    TopReexaminationStrategyConfig top = 2;
    FullReexaminationStrategyConfig full = 3;
  }
}

message NoReexaminationStrategyConfig {
}

message TopReexaminationStrategyConfig {
  int32 k = 1;
}

message FullReexaminationStrategyConfig {
}

message LabeledExample {
  string label = 1;
  bytes content = 2;
  ExampleSetWrapper exampleSet = 3;
}

enum ExampleSet {
  TRAIN = 0;
  TEST = 1;
}

message ExampleSetWrapper {
  ExampleSet value = 1;
}

message SearchId {
  string value = 1;
}
